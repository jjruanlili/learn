常用命令
docker pull 镜像名 从远程仓库抽取镜像
docker images 查看本地镜像
docker run 创建容器，启动应用
docker ps 查看正在运行的镜像
docker rm <-f> 容器id 删除容器  有-f表示强制删除
docker rmi <-f> 镜像名  删除镜像

容器化技术
物理机时代  虚拟机时代  容器化时代
物理机  独立的电脑主机
虚拟机  物理资源隔离      vmware，由它进行分配资源，cpu，内存，资源池，资源隔离，   问题  依然需要 安装操作系统
容器化  app层面隔离   docker  标准化迁移，统一参数配置，自动化部署，应用集群监控，开发与运维之间的沟通桥梁

阿里云->搜索容器镜像服务->镜像中心->镜像加速器
右侧相应的centos系统命令可以直接复制执行

docker pull xxx
docker run xxx


CentOS7安装docker
1.安装yum工具集和数据存储驱动包
yum install -y yum-utils device-mapper-persistent-data lvm2
执行完后，会有"完毕！"
2.修改yum安装源(改为阿里云镜像docker-ce 社区版)
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
3.检测最快安装源并使用
yum makecache fast
执行完后，会有"元数据缓存已建立"
4.安装docker(安装docker-ce 社区版)
yum -y install docker-ce
执行完后，会有"完毕！"
5.启动docker服务  验证
service docker start
6.查看docker版本
docker version
会显示Client和Server
7.从国外docker仓库拉取hello-world
docker pull hello-world
你会发现超时 = =
8.设置阿里云镜像加速
9.从阿里云拉取hello-world
docker pull hello-world
10.运行hello-world
docker run hello-world
输出"Hello from Docker!"



容器与镜像  
镜像是文件，只读，提供了运行程序完整的软硬件资源，是应用程序的集装箱。
容器是镜像的实例，由docker负责创建，容器之间彼此隔离。

操作系统的光盘  光盘就是镜像,每台装系统的电脑就是容器





可以通过下载的image id 判断是否是相同版本

-p端口映射  -d是后台运行
docker run -p 8000:8080 -d tomcat
8000是宿主机端口(本机)   8080是容器内部端口(虚拟机)
192.168.226.128


docker ps #查看正在运行的镜像 获取CONTAINER ID:11273fb2eece
docker exec -it 11273fb2eece /bin/bash #进入tomcat

mv webapps webapps2 #修改文件名
mv webapps.dist webapps ##修改文件名


tomcat容器
包含3个组件
linux  jdk   tomcat

容器状态
create  run start  stop pause unpause rm delete


dockerfile
构建镜像原理


容器间通信
单向通信  双向通信(绑定到相同的网桥)

容器间共享数据   (比如多个tomcat共享html)
volume 数据卷
共享容器


docker compose 单机多容器
容器编排




